연습문제 풀이

문제 1: 수식 (10 > 20) and (20 > 10)의 결과값은 얼마인가?
답: false
풀이: > 논리 연산자는 앞의 값이 뒤의 값보다 클 때 참, 작으면 거짓을 반환한다.
    그리고 and 조건식은 양 옆의 두 식이 모두 참일 때 참을 반환한고 하나라도 거짓이면 거짓을 반환한다.
    문제의 조건식에서 (10 > 20) 은 거짓이고 따라서 결과값을 출력하면 거짓(false)이 될 것이다.


문제 2: 조건 "x가 0 또는 1이면"을 올바르게 구현한 것을 모두 고르시오.
답: if x==0 or x==1:
풀이: '또는'을 의미하는 조건식은 or 이다. 즉 'x가 0 또는 1'조건식은 if x==0 or x==1로 표현 가능하다.


문제 3: 다음 코드의 실행 결과를 옆에 적어보자
코드 a답: 26
풀이: x는 3보다 크고 y도 30 보다 작다는 이중 조건문이 모두 참이기에 이중 조건문에 있는 식은  x+y를 수행한다.
코드 b답: 40
풀이: x가 3보다 크다는 첫 조건물을 충족하지 못하였기에 else문의 x*y를 수행한다.


문제 4: 다음의 2개의 if문을 논리연산자를 사용하여 하나의if 문으로 다시 작성하시오
답 a: if x > 10 and x < 20:
            print(x)
답 b: if x < 10 or x > 20: 
            print(x)
풀이: 중첩된 if문은 and를 이용하여 하나의 if문으로 만들 수도 있고, 독립된 if 문은 or을 이용하여 하나의 if문으로 만들 수도 있다.


문제 5:  x 변수가 1과 100사이의 값을 가지면 True 결과값을 생성하는 부울식을 작성하시오.
답: if x >= 1 and x <= 100:
        print(1)


문제 6:
if x = y :
print("두개의 값은 같음!")
다음과 같은 문장에서 잘못된 것은 무엇인가?
답: x=y를 x==y로 수정해야 한다.
풀이: x=y의 =은 논리 연산자가 아니라 대입 연산자다.


문제 7: 다음의 코드에서 중복을 제거하여 간결하게 만들 수 있는가?
temp = int(input("온도를 입력하시오:"))
if temp < 0:
    state = "얼음"
    print(state) 
else :
    state = "기체"
    pnint(state)

답:
temp = int(input("온도를 입력: "))
if temp < 0:
    state = "얼음"
else:
    state = "기체"
print(state)

풀이: 중복되는 print문을 조건문 밖으로 빼내 한 번만 사용하였다.


문제 8:동일한 기능을 하는 다음 두 코드 중에서 가독성이 높은 것은 어떤 것인가?
답: 위의 코드가 더 가독성이 높다.
풀이: 조건문 if heated == false는 조건문 if not heated 보다 상대적으로 더 자주 쓰이는 양식이고, 
    그만큼 더 익숙하고 편하게 인식할 수 있는 코드라고 생각한다.


문제 9: 사용자가 음수를 입력하면 "음수가 입력되었습니다."와 "음수를 입력하면 안 됩니다." 메시지가 출력되어아 한다.
이것을 구현한 다음 코드에서 잘못된 부분은 어떤 부분인가?
답: print("음수를 입력하면 안 됩니다.")
풀이: 파이썬은 들여쓰기에 엄격한 언어이기에 해당 코드를 들여쓰기 해야 if문 안으로 들어간다.

문제 10: 다음 코드에서 괄호를 제거하고 다시 문장을 작성할 수 있는가?
답: if city != "서울" and city != "부산":
풀이: 기존 코드는 city의 문자열이 서울과 부산이 아니여야 참을 반환하는 것이기에, 같은 의미의 조건문으로 수정하였다.

문제 11: 사용자 성적으로 부터 학점을 계산하는 코드가 다음과 같이 작성되었다. 잘못된 것은 없는지 체크하라.
답:
score = 87
if score >= 90:
    grade = "A" 
elif score >= 80:
    grade = "B" 
elif score >= 70:
    erade = "C" 
elif score >= 60:
    grade = "D"

풀이: 중첩 if문으로 만들어 차례대로 점수를 비교하게 해야한다. 
    그렇지 않으면 점수가 어떻든 간에 모든 if문을 시행하고 가장 아래에 있는 if문 값으로 결과가 덮어씌여진다.